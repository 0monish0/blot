---
import Layout from '../layouts/Layout.astro'

const slug = (file: string) => {
  file = file.replace('.md', '').slice(file.lastIndexOf('/'))
  return file.slice(1)
}

const list = (await Astro.glob('../../../art/list.json'))[0].default
let art = {}
list.map(folder => {
  folder.snapshots.map(snapshot => {
    art[snapshot] = { folder: folder.directory, source: folder.source }
  })
})

const images = (await Astro.glob('../../../art/*/snapshots/*')).map(
  img => img.default
)

const random = (min: number, max: number) =>
  Math.floor(Math.random() * (max - min)) + min

export const prerender = true
---

<script src="/masonry.min.js" type="module"></script>

<script>
  window.onload = () => {
    new Masonry(document.getElementById('gallery'), {
      itemSelector: '.framed'
    })
  }
</script>

<style is:global lang="scss">
  body,
  html {
    background-size: 40px 40px;
    background-image: linear-gradient(to right, #ddd 1px, transparent 1px),
      linear-gradient(to bottom, #ddd 1px, transparent 1px);
    min-height: 100vh;
  }

  canvas {
    z-index: 0;
    overflow-y: hidden;
  }

  #container {
    margin: 2rem auto;
    width: 90vw;
  }

  #gallery {
    padding: 1rem;
    position: relative;

    &::after {
      content: '';
      display: block;
      clear: both;
    }
  }

  #content {
    font-size: 1.5rem;
    font-family: var(--font-sans);
  }

  .framed {
    position: relative;
    padding: 2rem;
    float: left;
    max-width: 40vw;
    margin-bottom: 1rem;
    z-index: 1;
  }

  .framed:not(#content) {
    cursor: pointer;
    transition: all 0.1s;

    &:hover {
      transform: scale(101%);
    }

    img {
      max-width: 100%;
    }

    .thumbnail {
      border: 2px dashed var(--primary);
    }

    .top-left {
      position: absolute;
      top: 0;
      left: 0;
    }

    .top-right {
      position: absolute;
      top: 0;
      right: 0;
      transform: rotate(90deg);
    }

    .bottom-left {
      position: absolute;
      bottom: 0;
      left: 0;
      transform: rotate(270deg);
    }

    .bottom-right {
      position: absolute;
      bottom: 0;
      right: 0;
      transform: rotate(180deg);
    }
  }
</style>

<Layout title="Gallery" description="The gallery">
  <div id="container">
    <div id="gallery">
      <div class="framed" id="content">
        <h1 style={{ marginBottom: 0 }}>Gallery</h1>
        <p style={{ marginTop: 0 }}>
          One of the best ways to get involved is by building and testing one of
          the machines. All you need is a 3D printer and a little bit of
          hardware outlined in the bill of materials.
        </p>
      </div>
      {
        images.map(image => {
          const rotate = random(-0.5, 0.5)
          console.log(image, art[slug(image)])
          return (
            <a
              class="framed"
              href={`/editor?src=https://raw.githubusercontent.com/hackclub/blot/main/art/${
                art[slug(image)].folder
              }/${art[slug(image)].source}`}
              style={{
                transform: `rotate(${rotate}deg)`
              }}>
              <img class="thumbnail" alt={image.directory} src={image} />
              <img class="top-left" src="/decorative-corner.svg" />
              <img class="top-right" src="/decorative-corner.svg" />
              <img class="bottom-left" src="/decorative-corner.svg" />
              <img class="bottom-right" src="/decorative-corner.svg" />
            </a>
          )
        })
      }
    </div>
    <canvas
      style={{
        position: 'absolute',
        top: '0px',
        right: '0px'
      }}></canvas>
  </div>
</Layout>
