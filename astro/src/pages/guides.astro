---
import Layout from '../layouts/Layout.astro'
import { getCollection } from 'astro:content'
import { marked } from 'marked'

const workshops = await Astro.glob('../../../guides/*.md')

const slug = (file: string) => {
  file = file.replace('.md', '').slice(file.lastIndexOf('/'))
  return file.slice(1)
}

export const prerender = true
---

<script src="/masonry.min.js" type="module"></script>

<script>
  window.onload = () => {
    new Masonry(document.getElementById('gallery'), {
      itemSelector: '.framed'
    })
  }
</script>

<style is:global lang="scss">
  body,
  html {
    background-size: 40px 40px;
    background-image: linear-gradient(to right, #ddd 1px, transparent 1px),
      linear-gradient(to bottom, #ddd 1px, transparent 1px);
    min-height: 100vh;
  }

  canvas {
    z-index: 0;
    overflow-y: hidden;
  }

  #container {
    margin: 2rem auto;
    width: 90vw;
  }

  #gallery {
    padding: 1rem;
    position: relative;

    &::after {
      content: '';
      display: block;
      clear: both;
    }
  }

  #content {
    font-size: 1.5rem;
    font-family: var(--font-sans);
  }

  .framed {
    font-family: var(--font-serif);
    font-size: 0.995rem;
    position: relative;
    padding: 2rem;
    float: left;
    max-width: 40vw;
    margin-bottom: 1rem;
    z-index: 1;

    a {
      color: black;
      text-decoration: none;
    }

    .prose {
      background-color: white;
      padding: 1rem;

      a {
        color: var(--primary);
        text-decoration: underline;
      }

      code {
        font-family: var(--font-mono);
      }

      h1,
      h2,
      h3,
      h4,
      h5,
      h6 {
        font-family: var(--font-sans);
      }
    }
  }

  .framed:not(#content) {
    cursor: pointer;
    transition: all 0.2s;

    .prose {
      border: 2px dashed var(--primary);
      border-top: none;
    }

    &:hover {
      transform: scale(101%) rotate(-0.5deg);
    }

    .thumbnail {
      background-color: white;
      border: 2px dashed var(--primary);
      width: 100%;
    }

    .top-left {
      position: absolute;
      top: 0;
      left: 0;
    }

    .top-right {
      position: absolute;
      top: 0;
      right: 0;
      transform: rotate(90deg);
    }

    .bottom-left {
      position: absolute;
      bottom: 0;
      left: 0;
      transform: rotate(270deg);
    }

    .bottom-right {
      position: absolute;
      bottom: 0;
      right: 0;
      transform: rotate(180deg);
    }
  }
</style>

<Layout title="Guides" description="Guides">
  <div id="container">
    <div id="gallery">
      <div class="framed" id="content">
        <h1 style={{ marginBottom: 0 }}>Guides</h1>
        <p style={{ marginTop: 0 }}>
          One of the best ways to get involved is by building and testing one of
          the machines. All you need is a 3D printer and a little bit of
          hardware outlined in the bill of materials.
        </p>
      </div>
      {
        workshops
          .sort((a, b) =>
            a.frontmatter.pinned ? -1 : b.frontmatter.pinned ? 1 : 0
          )
          .map(workshop => (
            <div class="framed">
              <a href={`/guide/${slug(workshop.file)}`}>
                <img class="thumbnail" src={workshop.frontmatter.thumbnail} />
              </a>
              <a href={`/guide/${slug(workshop.file)}`}>
                <div class="prose">
                  <h2 style={{ marginBottom: 0 }}>
                    {workshop.frontmatter.title}
                  </h2>
                  <div set:html={marked(workshop.frontmatter.description)} />
                </div>
              </a>
              <img class="top-left" src="/decorative-corner.svg" />
              <img class="top-right" src="/decorative-corner.svg" />
              <img class="bottom-left" src="/decorative-corner.svg" />
              <img class="bottom-right" src="/decorative-corner.svg" />
            </div>
          ))
      }
    </div>
    <canvas
      style={{
        position: 'absolute',
        top: '0px',
        right: '0px'
      }}></canvas>
  </div>
</Layout>
