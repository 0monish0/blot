const id = "square-disarray.md";
const collection = "workshops";
const slug = "square-disarray";
const body = '\n# Square Disarray\n\n> You can follow along in [this editor](https://haxidraw.hackclub.dev/).\n\nLet\'s something like draw this:\n\n<img src="https://github.com/hackclub/haxidraw/assets/27078897/bcaf04e7-a00e-4f98-aaed-01eeebf2c79c" width="512"/>\n\n# Setting Up Workarea\n\nLet\'s start by centering the drawing we\'ll make in the document.\n\n```js\nconst width = 120;\nconst height = 120;\n\nsetDocDimensions(width, height);\n\nconst shapes = createTurtle(); // this will be our container turtle\n\nshapes.translate([width / 2, height / 2], shapes.cc); // this moves the center of our turtle to the center of our doc\n\ndrawTurtles(shapes);\n```\n\n# Draw a Square\n\nThis function draws squares.\n\n```js\nfunction rect(w, h) {\n  const t = createTurtle();\n\n  for (let i = 0; i < 2; i++) {\n    t.forward(w);\n    t.right(90);\n    t.forward(h);\n    t.right(90);\n  }\n\n  return t;\n}\n```\n\nLet\'s use it to add a square to our drawing.\n\n```js\n// ...\n\nshapes.join(rect(10, 10)); // here is the new line\n\nshapes.translate([width / 2, height / 2], shapes.cc);\n\n// ...\n```\n\n<img src="https://github.com/hackclub/haxidraw/assets/27078897/6a9b273c-391e-4ee7-9036-114524589d09" width="512"/>\n\n# Make a Grid\n\nFirst we\'ll make a row. Start with a lot of squares.\n\n```js\nconst gridWidth = 10;\n\nfor (let i = 0; i < gridWidth; i++) {\n  const t = rect(10, 10);\n  shapes.join(t);\n}\n```\n\n<img src="https://github.com/hackclub/haxidraw/assets/27078897/df700565-f80b-434b-ae92-1b6a4ecbc36b" width="512"/>\n\nWe can\'t see any change because they are on top of eachother! Space them out.\n\n```js\nfor (let i = 0; i < 3; i++) {\n  const t = rect(10, 10);\n  t.translate([23 * i, 0]);\n  shapes.join(t);\n}\n```\n\n<img src="https://github.com/hackclub/haxidraw/assets/27078897/367f376f-a903-44ec-8e31-db7e8090782b" width="512"/>\n\nIf we want the spacing to be perfect, each square should move by the width of a square.\n\n```js\nconst squareWidth = 10;\nfor (let i = 0; i < 3; i++) {\n  const t = rect(squareWidth, 10);\n  t.translate([squareWidth * i, 0]);\n  shapes.join(t);\n}\n```\n\n<img src="https://github.com/hackclub/haxidraw/assets/27078897/4e9e02da-20e3-4b83-ba27-5e384163148f" width="512"/>\n\nTo make it a grid add another loop.\n\n```js\nconst squareWidth = 10;\nconst squareHeight = 10;\nfor (let i = 0; i < 3; i++) {\n  for (let j = 0; j < 3; j++) {\n    const t = rect(squareWidth, squareHeight);\n    t.translate([squareWidth * i, squareHeight * j]);\n    shapes.join(t);\n  }\n}\n```\n\n<img src="https://github.com/hackclub/haxidraw/assets/27078897/9b0fea0d-2b04-492b-9c3e-018bde669099" width="512"/>\n\nIncrease the loop range for a bigger grid.\n\n<img src="https://github.com/hackclub/haxidraw/assets/27078897/5408832c-2125-47af-9e84-0dd88c2fab67" width="512"/>\n\n# Add Some Disarray\n\nWe can randomly translate each square.\n\n```js\nfor (let i = 0; i < 10; i++) {\n  for (let j = 0; j < 10; j++) {\n    const t = rect(squareWidth, squareHeight);\n    t.translate([squareWidth * i, squareHeight * j]);\n\n    // randomness added here\n    t.translate([randInRange(-1, 1), randInRange(-1, 1)]);\n\n    shapes.join(t);\n  }\n}\n```\n\n<img src="https://github.com/hackclub/haxidraw/assets/27078897/8f64548c-08dc-4709-85a8-cd941baf8438" width="512"/>\n\nScale the randomness with the x location.\n\n```js\nt.translate([(randInRange(-1, 1) * i) / 6, (randInRange(-1, 1) * i) / 6]);\n```\n\n<img src="https://github.com/hackclub/haxidraw/assets/27078897/fb392a9b-4ec8-4eec-9f1f-035d67c4ea50" width="512"/>\n\nNow rotate each square in a similar manner.\n\n```js\nt.rotate(randInRange(-1, 1) * 2 * i);\n```\n\n<img src="https://github.com/hackclub/haxidraw/assets/27078897/1a0902f1-084d-4651-a188-c1dbe6995289" width="512"/>\n\nAnd that\'s our piece!\n\n# Extensions\n\n- Can you adjust transformations based on x and y?\n- Can you add scale to the transformations?\n- Can you change the rectangle sizes?\n';
const data = { title: "Square Disarray", description: "Let's draw an (dis)array of squares! Let's start by centering the drawing we'll make in the document.", thumbnail: "https://github.com/hackclub/haxidraw/assets/27078897/bcaf04e7-a00e-4f98-aaed-01eeebf2c79c" };
const _internal = {
  type: "content",
  filePath: "/Users/jchen/Documents/Programming/prs/haxidraw/astro/src/content/workshops/square-disarray.md",
  rawData: "\ntitle: Square Disarray\ndescription: Let's draw an (dis)array of squares! Let's start by centering the drawing we'll make in the document.\nthumbnail: https://github.com/hackclub/haxidraw/assets/27078897/bcaf04e7-a00e-4f98-aaed-01eeebf2c79c"
};
export {
  _internal,
  body,
  collection,
  data,
  id,
  slug
};
